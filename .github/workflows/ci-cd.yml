name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Local MySQL for Test
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306
          container port: 3306
          mysql database: 'lol_test'
          mysql root password: 'tmpPassword'

      - name: Create application.properties for test
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > src/main/resources/application.properties
          echo "${{ secrets.APPLICATION_PROPERTIES_PROD }}" > src/main/resources/application-prod.properties
          echo "${{ secrets.APPLICATION_PROPERTIES_SECRET }}" > src/main/resources/application-secret.properties
          cat src/main/resources/application.properties

      #GitHub Actions에서 steps.<step_id>.conclusion은 해당 단계의 결과를 나타냄.
      # conclusion 값은 GitHub Actions 자체에서 할당하며, 가능한 값 종류는 success / failure / cancelled / skipped 이 있음.
      - name: Test with Gradle
        id: gradle-test
        run: SPRING_PROFILES_ACTIVE=secret ./gradlew test

      - name: Build with Gradle
        if: steps.gradle-test.conclusion == 'success'
        run: SPRING_PROFILES_ACTIVE=secret ./gradlew build

      - name: Login to Docker Hub
        if: steps.gradle-test.conclusion == 'success'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        if: steps.gradle-test.conclusion == 'success'
        run: docker build . -t carrotbat410/spring-lol-repository

      - name: Push Docker image
        if: steps.gradle-test.conclusion == 'success'
        run: docker push carrotbat410/spring-lol-repository

      - name: Deploy to Server
        if: steps.gradle-test.conclusion == 'success'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ubuntu
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            sudo -s /home/ubuntu/deploy.sh
            docker rmi -f $(docker images -f "dangling=true" -q)
#          tag:none인 이미지 지우는 명령어
